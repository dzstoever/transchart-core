<!-- ko with: home -->
@{
    ViewBag.Title = "Patient Search";
}


<script>
    var ServiceController = function($scope, $http) {
        var id = "123";
        $scope.getPerson = function() {
            //transchart.net.idataaccess.GetPersonByMRN(mrn, getPersonByMRN_Success, getPersonByMRN_Failure, "");
            var proxy = new transchart.net.idataaccess();
            proxy.GetPersonByMRN(id, successGetPerson, failureGetPerson, null);
            $scope.ErrorMessage = "";
        }
        var successGetPerson = function(data) {
            $scope.PersonID = data.ID;
            $scope.PersonName = data.Name;
            $scope.PersonAddress = data.Address;
            $scope.$digest();
        }
        var failureGetPerson = function(data) {
            $scope.ErrorMessage = "HTTP error code : " + data;
            $scope.$digest();
        }
    };

    function PostPerson() {
        //get person with jquery/ajax
        $.ajax({
            url: 'http://localhost:8733/Design_Time_Addresses/TC.Svcs/PersonFacadeSvc/GetPersonByMRN',
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",//Note: jsonp causes 405 error for POST request...
            data: JSON.stringify({ mrn: "12345" }),
            processData: false,
            success: GetPersonCallback,
            error: GetPersonFailed
        });

    }
    function GetPerson() {
        //get person with proxy - this requires an additional reference to Microsoft.Ajax, and causes and error, and is much slower.
        //var proxy = new transchart.net.idataaccess();
        //proxy.GetPersonByMRN("123", GetPersonCallback, GetPersonFailed, null);
        
        //get person with jquery/ajax
        $.ajax({
            url: 'http://127.0.0.1:3949/TC/dataaccess/rest/GetPersonByMRN',
            type: "GET",
            contentType: "application/json; charset=utf-8",
            dataType: "jsonp",//Note: must use JSONP(which appears much faster) ,json causes CORS error by sending OPTIONS instead of GET
            data: JSON.stringify({ mrn: "12345" }),
            processData: true,
            success: GetPersonCallback,
            error: GetPersonFailed
        });

    }
    function GetPersonCallback(result) {
        $("#txtMRN").val(result.MRN);
        $("#txtSSN").val(result.SSN);
        $("#txtFirst").val(result.FirstName);
        $("#txtLast").val(result.LastName);
        
    }
    function GetPersonFailed(result) {
        alert("Failure [" + result.status + "]  " + result.message);
    }


    
    function FetchPerson() {
        
        $.ajax({
            url: 'http://localhost:5450/TC/PersonFacadeSvc/GetPersonById',
            type: "GET",
            contentType: "application/json; charset=utf-8",
            dataType: "jsonp",
            data: JSON.stringify({ mrn: "12345" }),
            processData: true,
            success: SearchSuccessCallback,
            error: SearchFailureCallback
        });
    }

    function UpdatePerson() {
        
    }
    function FetchPeople() {
        //get person with jquery/ajax
        $.ajax({
            url: 'http://127.0.0.1:3949/TC/dataaccess/rest/GetPersonByMRN',
            type: "GET",
            contentType: "application/json; charset=utf-8",
            dataType: "jsonp",//Note: must use JSONP(which appears much faster) ,json causes CORS error by sending OPTIONS instead of GET
            data: JSON.stringify({ mrn: "12345" }),
            processData: true,
            success: GetPersonCallback,
            error: GetPersonFailed
        });

    }

    function SearchSuccessCallback(result) {
        //alert("Success [" + result.status + "]  " + result.message);
        $("#txtMRN").val(result.MRN);
        $("#txtSSN").val(result.SSN);
        $("#txtFirst").val(result.FirstName);
        $("#txtMiddle").val(result.MiddleName);
        $("#txtLast").val(result.LastName);
    }

    function SearchFailureCallback(result) {
        alert("Failure [" + result.status + "]  " + result.message);
    }
</script>


<h4 class="main-title">SELECT A PATIENT</h4>

@*@Html.Partial("_PatientSearch")*@
<div class="row" style="font-family: Consolas;">
            <div class="col-md-12">
                <fieldset class="well" style="background-color: transparent; margin-bottom: 0;">
                    <div class="col-sm-5 hidden-xs" style="text-align: right; font-size: 1.1em;">
                        <label>MRN:</label><br/>
                        <label>SSN:</label><br/>
                        <label>First Name:</label><br/>
                        <label>Middle Name:</label><br/>                        
                        <label>Last Name:</label><br/>                                                    
                    </div>
                    <div class="col-sm-7" style="padding-left: 0;">
                        <label class="hidden-sm hidden-md hidden-lg">MRN:<br/></label>
                            <input type="text" id="txtMRN" data-bind="value: searchMRN"/><br/>
                        <label class="hidden-sm hidden-md hidden-lg">SSN:<br/></label>
                            <input type="text" id="txtSSN" data-bind="value: searchSSN"/><br/>
                        <label class="hidden-sm hidden-md hidden-lg">First Name:<br/></label>
                            <input type="text" id="txtFirst" data-bind="value: searchFirstName"><br/>
                        <label class="hidden-sm hidden-md hidden-lg">Middle Name:<br/></label>
                            <input type="text" id="txtMiddle" data-bind="value: searchMiddleName"><br/>
                        <label class="hidden-sm hidden-md hidden-lg">Last Name:<br/></label>
                            <input type="text" id="txtLast" data-bind="value: searchLastName"><br/>
                    </div>
                </fieldset>
                <fieldset class="well" style="background-color: transparent; padding: 10px; font-family: Consolas;">                    
                    <div class="col-sm-12 hidden-xs" style="text-align: center">
                                                
                        <input id="btnGetPerson" type="button" value="Get Person" onclick=" FetchPerson() ">
                        <input id="btnUpdatePerson" type="button" value="Update Person" onclick=" UpdatePerson() ">
                        <input id="btnGetPeople" type="button" value="Get People" onclick=" FetchPeople() ">

                        <!--
                        <a href="http://asp.net" class="btn btn-default btn-sm" style="padding-left: 30px; padding-right: 30px;">&nbsp;Enter</a>&nbsp;&nbsp;                                                
                        <a href="http://asp.net" class="btn btn-default btn-sm" style="padding-left: 30px; padding-right: 30px;">Census</a>
                        -->
                    </div>
                    <div class="col-xs-12 hidden-sm hidden-md hidden-lg" style="text-align: center">
                        <a href="http://asp.net" class="btn btn-default btn-sm" style="width: 100%;">&nbsp;Enter</a><br/>                                                
                        <a href="http://asp.net" class="btn btn-default btn-sm" style="width: 100%;">Census</a>                   
                    </div>
                </fieldset>                
            </div>
        </div>

<div id="results">
    <h5>Results</h5>

    @*<ul class="patients" data-bind="foreach: patient">
                <li data-bind="text: $data,
    css: { selected: $data == $root.selectedPatienTId() },
    click: $root.goToPatient"></li>
            </ul>*@
    <hr/>
    <p class="version" data-bind="text: myHometown"></p>
</div>


<!-- /ko -->
